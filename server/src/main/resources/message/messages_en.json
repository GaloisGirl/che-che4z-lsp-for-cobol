{
  "CobolLineReaderImpl.longLineMsg": {
    "message": "Source text cannot go past column 80"
  },
  "CobolLineReaderImpl.incorrectLineFormat": {
    "message": "Unexpected indicator area content"
  },
  "CobolLineReaderImpl.registerFormatError": {
    "message": "Syntax error by CobolLineReaderImpl#registerFormatError: %s"
  },
  "ContinuationLineTransformation.periodRequired": {
    "message": "IGYDS1082-E A period was required."
  },
  "ContinuationLineTransformation.registerStringClosingError": {
    "message": "Syntax error by ContinuationLineTransformation#registerStringClosingError: %s"
  },
  "ContinuationLineTransformation.continuationLineContentAreaA": {
    "message": "A continuation line cannot contain values in the Content Area A"
  },
  "ContinuationLineTransformation.registerContinuationLineError": {
    "message": "Syntax error by ContinuationLineTransformation#registerContinuationLineError: %s"
  },
  "GrammarPreprocessorListener.recursionDetected": {
    "message": "Recursive copybook declaration for: %s"
  },
  "GrammarPreprocessorListener.copyBkOver8Chars": {
    "message": "Copybook declaration has more than 8 characters for: %s"
  },
  "GrammarPreprocessorListener.errorSuggestion": {
    "message": "%s: Copybook not found"
  },
  "ErrorStrategy.reportInputMismatch": {
    "message": "Syntax error on %s expected %s"
  },
  "ErrorStrategy.reportNoViableAlternative": {
    "message": "No viable alternative at input %s"
  },
  "ErrorStrategy.reportUnwantedToken": {
    "message": "Extraneous input %s expected %s"
  },
  "ErrorStrategy.reportMissingToken": {
    "message": "Missing token %s at %s"
  },
  "ErrorStrategy.performInlineStatementreportUnwantedToken": {
    "message": "Extraneous input %s expected END TERMINATOR"
  },
  "CobolVisitor.AreaAWarningMsg": {
    "message": "The following token must start in Area A: "
  },
  "CobolVisitor.AreaBWarningMsg": {
    "message": "The following token must start in Area B: "
  },
  "CobolVisitor.identicalProgMsg": {
    "message": "Program-name must be identical to the program-name of the corresponding PROGRAM-ID paragraph: "
  },
  "CobolVisitor.declarativeSameMsg": {
    "message": "The following token cannot be on the same line as a DECLARATIVE token: "
  },
  "CobolVisitor.invalidDefMsg": {
    "message": "Invalid definition for: %s"
  },
  "CobolVisitor.misspelledWord": {
    "message": "A misspelled word, maybe you want to put %s"
  },
  "CobolVisitor.progIDIssueMsg": {
    "message": "There is an issue with PROGRAM-ID paragraph"
  },
  "Communications.noLangEngine": {
    "message": "Cannot find a language engine for the given language ID: %s"
  },
  "Communications.syntaxAnalysisInProgress": {
    "message": "%s : Syntax analysis in progress"
  },
  "Communications.noSyntaxError": {
    "message": "No syntax errors detected in %s"
  },
  "Communications.extUnsupported": {
    "message": "The given document extension is unsupported: %s"
  },
  "CobolTextDocumentService.GifsURINotSupported": {
    "message": "GITFS URI not supported %s"
  },
  "CobolTextDocumentService.descErrorMsg": {
    "message": "An exception thrown while applying %s for %s:"
  }
}